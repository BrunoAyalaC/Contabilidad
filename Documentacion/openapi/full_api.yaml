openapi: 3.0.3
info:
  title: Plataforma - API (Auth, Invoices, OCR, SUNAT)
  description: >-
    API completa y profesional para la plataforma de facturación, OCR y
    verificación SUNAT. Incluye contratos para Auth, Invoices (CRUD,
    upload-pdf, apply-parsed, verify-ruc), OCR ingestion/status/suggestions y
    servicio SUNAT.
  version: 1.0.0
servers:
  - url: https://api.example.com/api
    description: URL base (reemplazar en cada entorno)
  - url: http://localhost:5000/api
    description: Entorno de desarrollo (usar el servidor local apropiado)
tags:
  - name: auth
    description: Endpoints de autenticación
  - name: invoices
    description: Gestión de facturas (ventas/compra) y carga de PDFs
  - name: ocr
    description: Ingest y estado de OCR / Parser
  - name: sunat
    description: Verificación de RUC y scraping
security:
  - bearerAuth: []
paths:
  /auth/login:
    post:
      tags: [auth]
      summary: Iniciar sesión (devuelve accessToken y opcional refresh cookie)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Autenticación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auth/refresh:
    post:
      tags: [auth]
      summary: Refrescar access token (acepta cookie httpOnly o body)
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token refrescado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auth/logout:
    post:
      tags: [auth]
      summary: Cerrar sesión (revoca refresh token)
      responses:
        '204':
          description: Logout realizado
        '400':
          $ref: '#/components/responses/BadRequest'
  /auth/me:
    get:
      tags: [auth]
      summary: Obtener información del usuario actual
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /invoices:
    get:
      tags: [invoices]
      summary: Listar facturas (paginado, filtros)
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - name: q
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum: [sale, purchase]
      responses:
        '200':
          description: Lista paginada de facturas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoices'
    post:
      tags: [invoices]
      summary: Crear una factura
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceCreate'
      responses:
        '201':
          description: Factura creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequest'
  /invoices/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          format: uuid
          type: string
    get:
      tags: [invoices]
      summary: Obtener factura por id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Factura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags: [invoices]
      summary: Actualizar factura
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
      responses:
        '200':
          description: Factura actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags: [invoices]
      summary: Eliminar factura
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Eliminado
  /invoices/{id}/verify-ruc:
    post:
      tags: [invoices, sunat]
      summary: Encolar verificación de RUC para esta factura
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        '202':
          description: Job encolado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreated'
  /invoices/{id}/verify-ruc/{jobId}:
    get:
      tags: [invoices, sunat]
      summary: Estado del job de verificación para una factura
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Estado del job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SUNATVerificationResult'

  /invoices/upload-pdf:
    post:
      tags: [invoices, ocr]
      summary: Subir PDF para parseo y obtener parsed invoice (encolado)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                associate:
                  type: boolean
                  description: Crear draft asociado si true
      responses:
        '202':
          description: Job creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreated'
  /invoices/upload-pdf/{jobId}:
    get:
      tags: [invoices, ocr]
      summary: Obtener estado y parsed result del upload-pdf
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Estado y parsed invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsedInvoiceResponse'
  /invoices/{id}/apply-parsed:
    post:
      tags: [invoices, ocr]
      summary: Aplicar parsedInvoice a un draft existente
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParsedInvoice'
      responses:
        '200':
          description: Factura actualizada/aplicada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'

  /ocr/invoices:
    post:
      tags: [ocr]
      summary: Ingest OCR (alternativa directa al upload desde invoices)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '202':
          description: Job encolado para OCR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreated'
  /ocr/invoices/{jobId}:
    get:
      tags: [ocr]
      summary: Estado del job OCR
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resultado parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsedInvoiceResponse'
  /ocr/suggestions:
    get:
      tags: [ocr]
      summary: Sugerencias para autocompletar (productos, clientes)
      parameters:
        - name: field
          in: query
          required: true
          schema:
            type: string
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Lista de sugerencias
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Suggestion'

  /sunat/verify:
    post:
      tags: [sunat]
      summary: Encolar verificación de RUC (general)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ruc:
                  type: string
                country:
                  type: string
                  default: PE
      responses:
        '202':
          description: Job creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreated'
  /sunat/verify/{jobId}:
    get:
      tags: [sunat]
      summary: Obtener resultado de verificación SUNAT
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resultado de verificación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SUNATVerificationResult'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    refreshCookie:
      type: apiKey
      in: cookie
      name: refreshToken
  parameters:
    page:
      name: page
      in: query
      schema:
        type: integer
        default: 1
    limit:
      name: limit
      in: query
      schema:
        type: integer
        default: 20
  responses:
    BadRequest:
      description: Petición inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: No autorizado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        user:
          $ref: '#/components/schemas/User'
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            type: string
    JobCreated:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        status:
          type: string
    Suggestion:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        matchScore:
          type: number
          format: float
    SuggestionList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Suggestion'
    PaginatedInvoices:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
        meta:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
    InvoiceLine:
      type: object
      properties:
        id:
          type: string
          format: uuid
        line_no:
          type: integer
        product_id:
          type: string
        description:
          type: string
        quantity:
          type: number
        unit_price:
          type: number
        tax_rate:
          type: number
        line_total:
          type: number
    Invoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [sale, purchase]
        document_type:
          type: string
        document_subtype:
          type: string
        is_boleta:
          type: boolean
        invoice_number:
          type: string
        date:
          type: string
          format: date
        party_id:
          type: string
        party_ruc:
          type: string
        ruc:
          type: string
        party_name:
          type: string
        currency:
          type: string
        status:
          type: string
        sub_total:
          type: number
        tax_total:
          type: number
        total:
          type: number
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLine'
        metadata:
          type: object
    InvoiceCreate:
      type: object
      required: [type, date, lines]
      properties:
        type:
          type: string
          enum: [sale, purchase]
        document_type:
          type: string
        document_number:
          type: string
        is_boleta:
          type: boolean
        ruc:
          type: string
        party_name:
          type: string
        currency:
          type: string
          default: USD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLine'
    InvoiceUpdate:
      type: object
      properties:
        status:
          type: string
        metadata:
          type: object
    ParsedInvoice:
      type: object
      properties:
        invoiceId:
          type: string
          nullable: true
        date:
          type: string
        supplier:
          type: object
          properties:
            name:
              type: string
            ruc:
              type: string
        customer:
          type: object
          properties:
            name:
              type: string
            ruc:
              type: string
        document_subtype:
          type: string
        is_boleta:
          type: boolean
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLine'
        subTotal:
          type: number
        taxTotal:
          type: number
        total:
          type: number
        rawText:
          type: string
        confidence:
          type: number
    ParsedInvoiceResponse:
      type: object
      properties:
        jobId:
          type: string
        status:
          type: string
        parsed:
          $ref: '#/components/schemas/ParsedInvoice'
    SUNATVerificationResult:
      type: object
      properties:
        jobId:
          type: string
        status:
          type: string
          enum: [pending, done, error]
        result:
          type: object
          properties:
            ruc:
              type: string
            name:
              type: string
            valid:
              type: boolean
            details:
              type: object
    JournalEntryCreate:
      type: object
      required: [date, lines]
      properties:
        date:
          type: string
          format: date
        description:
          type: string
        lines:
          type: array
          items:
            type: object
            properties:
              accountId:
                type: string
              debit:
                type: number
              credit:
                type: number
    JobStatus:
      type: object
      properties:
        jobId:
          type: string
        status:
          type: string
  # end components

x-contact:
  name: Equipo Backend
  email: backend-team@example.com

security:
  - bearerAuth: []
